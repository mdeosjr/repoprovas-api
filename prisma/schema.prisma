generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categories {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  tests Tests[]

  @@map("categories")
}

model Disciplines {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique
  termId              Int
  terms               Terms                 @relation(fields: [termId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachersDisciplines TeachersDisciplines[]
  tests               Tests[]

  @@map("disciplines")
}

model Teachers {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique
  teachersDisciplines TeachersDisciplines[]

  @@map("teachers")
}

model TeachersDisciplines {
  id           Int         @id @default(autoincrement())
  teacherId    Int
  disciplineId Int
  disciplines  Disciplines @relation(fields: [disciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachers     Teachers    @relation(fields: [teacherId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tests        Tests[]

  @@map("teachersDisciplines")
}

model Terms {
  id          Int           @id @default(autoincrement())
  number      Int           @unique
  disciplines Disciplines[]

  @@map("terms")
}

model Tests {
  id                    Int                 @id @default(autoincrement())
  name                  String
  pdfUrl                String
  categoryId            Int
  teachersDisciplinesId Int
  disciplineId          Int
  viewsCount            Int                 @default(0)
  categories            Categories          @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachersDisciplines   TeachersDisciplines @relation(fields: [teachersDisciplinesId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  disciplines           Disciplines         @relation(fields: [disciplineId], references: [id])

  @@map("tests")
}

model Users {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  @@map("users")
}